import 'package:mark_x/models/goal.dart';

List<Habit> demohabits = [
  Habit(
    title: "üèÉ‚Äç‚ôÇÔ∏è Run 5 km",
    description: "Complete a 5 km run every morning for cardio boost.",
    progress: 60.0,
    priority: "High",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 5)),
    endDate: DateTime.now().add(Duration(days: 25)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 3)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üìñ Read 20 pages",
    description: "Read 20 pages from any book of your choice.",
    progress: 80.0,
    priority: "Medium",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 3)),
    endDate: DateTime.now().add(Duration(days: 27)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 1)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üíß Drink 2 liters of water",
    description: "Track daily water intake ‚Äî 2 liters minimum.",
    progress: 100.0,
    priority: "High",
    isCompleted: true,
    startDate: DateTime.now().subtract(Duration(days: 10)),
    endDate: DateTime.now().add(Duration(days: 20)),
    lastUpdated: DateTime.now(),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üßò‚Äç‚ôÇÔ∏è Meditate for 10 minutes",
    description: "Practice daily mindfulness by meditating in the morning.",
    progress: 40.0,
    priority: "Low",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 1)),
    endDate: DateTime.now().add(Duration(days: 29)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 5)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üíª Complete coding challenge",
    description: "Finish the weekly challenge on LeetCode or HackerRank.",
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
    progress: 50.0,
    priority: "High",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 2)),
    endDate: DateTime.now().add(Duration(days: 5)),
    lastUpdated: DateTime.now().subtract(Duration(days: 1)),
  ),
  Habit(
    title: "üìû Call Mom",
    description: "Catch up with Mom every Sunday evening.",
    progress: 100.0,
    priority: "Medium",
    isCompleted: true,
    startDate: DateTime.now().subtract(Duration(days: 14)),
    endDate: DateTime.now().add(Duration(days: 16)),
    lastUpdated: DateTime.now().subtract(Duration(days: 1)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üç≥ Practice a new recipe",
    description: "Try a new recipe each week to improve cooking skills.",
    progress: 30.0,
    priority: "Medium",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 4)),
    endDate: DateTime.now().add(Duration(days: 10)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 6)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üßπ Organize room",
    description: "Clean up workspace and declutter room for mental clarity.",
    progress: 90.0,
    priority: "Low",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 6)),
    endDate: DateTime.now().add(Duration(days: 1)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 2)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üìù Finish project report",
    description: "Dedicate time daily to complete the ongoing project report.",
    progress: 20.0,
    priority: "High",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 2)),
    endDate: DateTime.now().add(Duration(days: 8)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 9)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], 
  ),
  Habit(
    title: "üèÉ‚Äç‚ôÇÔ∏è Run 5 km",
    description: "Complete a 5 km run every morning for cardio boost.",
    progress: 60.0,
    priority: "High",
    isCompleted: false,
    startDate: DateTime.now().subtract(Duration(days: 5)),
    endDate: DateTime.now().add(Duration(days: 25)),
    lastUpdated: DateTime.now().subtract(Duration(hours: 3)),
    completedDates: [DateTime.now().subtract(Duration(days: 1))], // example
  ),
];
